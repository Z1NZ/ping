language: c
os : linux
sudo: false
dist: trusty
env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "UMaDEDiYvbKrm8xtHE31uZ5seEsA8J+zn0RqnyRQFiML5owoEz5ghEJ4a6aeuRhiMW8w+/vlJsw98OsQxHEDN5opiFU4h1w8Vd3oxJp0h921i9x3IYaQmWNJTfPDnsfZy9B+lksE8IrjNFquq3jLGc/xQhxTxvAQdAkYM3Tt+FlDOuk4ZZznxhVTBimgxK7hAHaI2HBOwfKYhS+YCHimLE89AqFvnq+RlGjLdn1Bpi02DyFTNLjXdkKDd6fQwNRKegrcUEUPMgXUfqStoeORjV0eGR//kNrJu+KE1JeBpawYPwxjAfAaeBmw+HTwrymJ3LRyi8dK7ZvOfLMW7in60zxUnYZH8ucgO19PPkGQL0i7DgFlhEdw/OO/+tZvYnfoqX/GAWcBZoJMAnXZR4g2K23owU5iKyEHkHV/h86d+dqP2jM1yMXezZLvwzYLFtN0Ec2l9aF2xk1ODe6S8z8+IP7lHWxD/y3PZH4N9YRBzLPr7vj1wOszn4yUfqDo9j8n7deMLe9f5fkcSPGI9Gz1lQs8TuuyyXOVFOjjHyqfpXliXPQQ0iP9CPKvJUAhuKXj3N/zNwwNgqe5eENahAn79fYgZ67PH5GpbK8cNbhXsQei/wts2UXrHnmeXilaDF6mND0Omj3sfBqUCeHWFRxMXEHlODgWoqb5OXl82UukxBE="
script:
  - scan-build -v make
  - make fclean
  - scan-build -v --status-bugs -analyze-headers  make

addons:
  apt:
    packages:
      - cmake
      - g++-4.8
  coverity_scan:
    project:
      name: "Z1NZ/ping"
      description: "Build submitted via Travis CI"
    notification_email: sofiane.rabah@gmail.com
    build_command_prepend: ""
    build_command: "make"
    branch_pattern: master
  before_install:
    - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-



matrix:
  include:

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env:
         - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    
    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env:
        - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      env:
        - MATRIX_EVAL="CC=clang-3.7 && CXX=clang++-3.7"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

before_install:
    - eval "${MATRIX_EVAL}"
